/* jshint es3: false */
/* globals wc_epayco_creditcard_checkout_params, CheckoutCreditcardElements, CheckoutCreditcardPage */
(function ($) {
    'use strict';
    $(function () {
        var epayco_submit = false;

      async  function  epaycoFormHandler() {
          try {
            var publicKey = wc_epayco_creditcard_checkout_params.public_key_epayco;
            ePayco.setPublicKey(publicKey);
            ePayco.setLanguage("es");
            let formOrderReview = document.querySelector('form[id=order_review]');
            if (formOrderReview) {
                let choCustomContent = document.querySelector('.ep-checkout-creditcard-container');
                let choCustomHelpers = choCustomContent.querySelectorAll('input-helper');

                choCustomHelpers.forEach((item) => {
                    let inputHelper = item.querySelector('div');
                    if (inputHelper.style.display !== 'none') {
                        removeBlockOverlay();
                    }
                });
            }
            const CustomContent = document.querySelector("form.checkout").getElementsByClassName("ep-checkout-creditcard-container")[0];
            let ticketHelpers = CustomContent.querySelectorAll('input-helper');
            const current =  document.querySelector(".ep-checkout-creditcard-container");

            const customContentName = current.querySelector('input-card-name').querySelector('input');
            const nameHelpers =  current.querySelector('input-helper-epayco').querySelector("div");
            verifyName(current,customContentName,nameHelpers)

            const cardNumberContentName = current.querySelector('input-card-number').querySelector('input');
            const cardNumberHelpers =  current.querySelector('input-card-number').querySelector("input-helper-epayco").querySelector("div");
            numberName(current,cardNumberContentName,cardNumberHelpers)

            const cardExpirationContentName = current.querySelector('input-card-expiration-date').querySelector('input');
            const cardExpirationHelpers =  current.querySelector('input-card-expiration-date').querySelector("input-helper-epayco").querySelector("div");
            expirationDate(current,cardExpirationContentName,cardExpirationHelpers)

            const cardSecurityContentName = current.querySelector('input-card-security-code').querySelector('input');
            const cardSecurityHelpers =  current.querySelector('input-card-security-code').querySelector("input-helper-epayco").querySelector("div");
            securityCode(current,cardSecurityContentName,cardSecurityHelpers)


            const customContentInstallments =document.getElementById('epayco_creditcard[installmet]').value;
            const doc_type =document.getElementById('epayco_creditcard[identificationType]');
            const cardContentDocument = current.querySelector('input-document-epayco').querySelector('input');
            const doc_number_value =cardContentDocument.value;

            const documentHelpers =  current.querySelector('input-document-epayco').querySelector("input-helper-epayco").querySelector("div");
            verifyDocument(current,cardContentDocument,documentHelpers,doc_type)

            const customContentAddress = current.querySelector('input-address-epayco').querySelector('input');
            const addressHelpers =  current.querySelector('input-address-epayco').querySelector("input-helper-epayco").querySelector("div");
            verifyAddress(current, customContentAddress, addressHelpers)

            const customContentEmail = current.querySelector('input-card-email').querySelector('input');
            const emailHelpers =  current.querySelector('input-card-email').querySelector("input-helper-epayco").querySelector("div");
            verifyEmail(current, customContentEmail, emailHelpers)


            const customContentCellphone = current.querySelector('input-cellphone-epayco').querySelector('#cellphoneTypeNumber').querySelector('input');
            const cellphoneHelpers =  current.querySelector('input-cellphone-epayco').querySelector("input-helper-epayco").querySelector("div");
            verifyCellphone(current, customContentCellphone, cellphoneHelpers)

            const cellphoneType = customContentCellphone.parentElement.parentElement.querySelector(".ep-input-select-select").value;
            const countryContentCountry = current.querySelector('#form-checkout__identificationCountry-container').lastChild.querySelector('input');
            const countryType = countryContentCountry.parentElement.parentElement.querySelector(".ep-input-select-select").value;

            const countryHelpers =  current.querySelector('input-country-epayco').querySelector("input-helper-epayco").querySelector("div");
            verifyCountry(current,countryContentCountry,countryHelpers)

            //verifyTermAndCondictions(CustomContent)
            const termanAndContictionContent = document.querySelector('terms-and-conditions').querySelector('input');
            const termanAndContictionHelpers = document.querySelector('terms-and-conditions').querySelector(".ep-terms-and-conditions-container");
            /*
            termanAndContictionContent.addEventListener('click', function() {
                if (termanAndContictionContent.checked) {
                    termanAndContictionHelpers.classList.remove("ep-error")
                }
            });
            */
            verifyTermAndCondictions(termanAndContictionContent)

            let checked =  termanAndContictionContent.checked;
            if (checkForErrors(ticketHelpers) || !checked) {
                removeBlockOverlay();
                return false;
            } else {
                const returnInfo =  await  createToken(CustomContent);
                if(returnInfo){
                    //alert("ok!!!!!!!!");
                    //jQuery('form.checkout').submit();
                    console.log("success!!")
                    return true;
                } else {
                  console.warn("Error al generar el token");
                  removeBlockOverlay(); // Asegúrate que esté definida
                  return false;
              }
            }

           } catch (error) {
              console.log(error);
              removeBlockOverlay();
              return false;
          }
        }

        function checkForErrors(ticketHelpers) {
            let hasError = false;
            ticketHelpers.forEach((item) => {
                let inputHelper = item.querySelector('div');
                if (inputHelper.style.display !== 'none') {
                    hasError = true;
                }
            });

            return hasError;
        }

        function verifyName(current,customContentName,nameHelpers) {
            if (customContentName.value === '') {
                current.querySelector('input-card-name').querySelector(".ep-input").classList.add("ep-error");
                nameHelpers.style.display = 'flex';
            }
        }

        function numberName(current,cardNumberContentName,cardNumberHelpers) {
            if (cardNumberContentName.value === '') {
                current.querySelector('input-card-number').querySelector(".ep-input").classList.add("ep-error");
                cardNumberHelpers.style.display = 'flex';
            }
        }

        function expirationDate(current,cardExpirationContentName,cardExpirationHelpers) {
            if (cardExpirationContentName.value === '') {
                current.querySelector('input-card-expiration-date').querySelector(".ep-input").classList.add("ep-error");
                cardExpirationHelpers.style.display = 'flex';
            }
        }

        function securityCode(current,cardSecurityContentName,cardSecurityHelpers) {
            if (cardSecurityContentName.value === '') {
                current.querySelector('input-card-security-code').querySelector(".ep-input").classList.add("ep-error");
                cardSecurityHelpers.style.display = 'flex';
            }
        }

        function verifyDocument(current,cardContentDocument,documentHelpers,doc_type) {
            if (cardContentDocument.value === '' || "Tipo" === doc_type.value || "Type" === doc_type.value) {
                current.querySelector('input-document-epayco').querySelector(".ep-input").classList.add("ep-error");
                current.querySelector('input-document-epayco').querySelector(".ep-input").parentElement.lastChild.classList.add("ep-error");
                documentHelpers.style.display = 'flex';
            }
        }

        function verifyAddress(current, customContentAddress, addressHelpers) {
            if (customContentAddress.value === '') {
                current.querySelector('input-address-epayco').querySelector(".ep-input").classList.add("ep-error");
                addressHelpers.style.display = 'flex';
            }
        }



        function verifyEmail(current, customContentEmail, emailHelpers) {
            if (customContentEmail.value === '') {
                current.querySelector('input-card-email').querySelector(".ep-input").classList.add("ep-error");
                emailHelpers.style.display = 'flex';
            }
        }



        function verifyCellphone(current, customContentCellphone, cellphoneHelpers) {
            if (customContentCellphone.value === '') {
                current.querySelector('input-cellphone-epayco').querySelector(".ep-input").classList.add("ep-error");
                current.querySelector('input-cellphone-epayco').querySelector(".ep-input").parentElement.lastChild.classList.add("ep-error");
                cellphoneHelpers.style.display = 'flex';
            }
        }



        function verifyCountry(current,countryContentCountry,countryHelpers) {
            if (countryContentCountry.value === '') {
                current.querySelector('input-country-epayco').querySelector(".ep-input").classList.add("ep-error");
                current.querySelector('input-country-epayco').querySelector(".ep-input").parentElement.lastChild.classList.add("ep-error");
                countryHelpers.style.display = 'flex';
            }
        }


        function verifyTermAndCondictions(CustomContent) {
            if (!CustomContent.checked) {
                CustomContent.parentElement.parentElement.parentElement.querySelector(".ep-terms-and-conditions-container").classList.add('ep-error')
            }
        }



        async function  createToken($form) {
            return await new Promise(function(resolve, reject) {
                ePayco.token.create($form, function(data) {
                    if(data.status == 'error' || data.error || error){
                        if(error){
                            console.error("Error creating token: ", error);
                            data = {
                                status: 'error',
                                description: error.message || "An error occurred while creating the token."
                            };
                            const parsedError = handleCardFormErrors(data);
                            console.error('ePayco cardForm error: ', parsedError);
                            reject(false)
                        }
                        reject(data)
                    }else{
                        if(data.status == 'success'){
                            var customContent = document.querySelector("form.checkout").getElementsByClassName("ep-checkout-creditcard-container")[0];
                            customContent.querySelector('#form-checkout__cardNumber-container').querySelector('input').value='';
                            customContent.querySelector('#form-checkout__expirationDate-container').querySelector('input').value='';
                            customContent.querySelector('#form-checkout__securityCode-container').querySelector('input').value='';
                            document.querySelector('#cardTokenId').value = data.data.token;
                            jQuery('form.checkout').submit();
                            resolve(data)    
                        }else{
                            reject(data)
                        }
                    }
                    
                });
            });
        }



        function handleCardFormErrors(cardFormErrors) {
            if (cardFormErrors.length) {
                const errors = [];
                cardFormErrors.forEach((e) => {
                    errors.push(e.description || e.message);
                });

                return errors.join(',');
            }

            return cardFormErrors.description || cardFormErrors.message;
        }

        // Process when submit the checkout form
        $('form.checkout').on('checkout_place_order_woo-epayco-creditcard',async function () {
            return await epaycoFormHandler();
        });

        // If payment fail, retry on next checkout page
        $('form#order_review').submit(function () {
            return epaycoFormHandler();
        });

        // Remove Block Overlay from Order Review page
        function removeBlockOverlay() {
            if ($('form#order_review').length > 0) {
                $('.blockOverlay').css('display', 'none');
            }
        }

    });
})(jQuery);






